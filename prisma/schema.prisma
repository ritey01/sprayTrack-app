generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Paddock {
  id           Int     @id @default(autoincrement())
  name         String  @db.VarChar(255)
  is_displayed Boolean   @default(true)
  sprayEvent   SprayEvent[]
  company   Company?  @relation(fields: [companyId], references: [id])
  companyId  Int?

   @@index([companyId])
  
}

model Crops {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  name         String  @db.VarChar(50)
  is_displayed Boolean   @default(true)
  sprayEvent   SprayEvent[]
  company   Company?  @relation(fields: [companyId], references: [id])
  companyId  Int?

   @@index([companyId])
}

model SprayName {
  id           Int     @id @default(autoincrement()) 
  name         String  @db.VarChar(50)
  is_displayed Boolean   @default(true)
  sprays Spray[] 
  company   Company?  @relation(fields: [companyId], references: [id])
  companyId  Int?

  @@index([companyId])
  
}

model SprayMix {
  id           Int         @id @default(autoincrement())
  title        String
  is_displayed Boolean     @default(true)
  sprays     SprayMixSpray[]
  sprayEvent   SprayEvent[]
   company   Company?  @relation(fields: [companyId], references: [id])
  companyId  Int?

   @@index([companyId])
}

enum Unit{
  Litres
  mls
  Kgs
  grams
}

model Spray {
  id           Int         @id @default(autoincrement())
  rate         Int
  unit         Unit
  is_displayed Boolean   @default(true)
  sprayMixes SprayMixSpray[] 
  sprayName    SprayName  @relation(fields: [sprayNameId], references: [id])
  sprayNameId  Int
  
 
  @@index([sprayNameId])
}


model SprayMixSpray {
  id           Int         @id @default(autoincrement())
  spray          Spray         @relation(fields: [sprayId], references: [id])
  sprayId      Int
  sprayMix       SprayMix      @relation(fields: [sprayMixId], references: [id])
  sprayMixId   Int

  @@index([sprayId])
  @@index([sprayMixId])
}

model SprayEvent {
   id            Int      @id @default(autoincrement())
  date          String
  paddock       Paddock  @relation(fields: [paddockId], references: [id])
  paddockId     Int
  crop          Crops     @relation(fields: [cropId], references: [id])
  cropId        Int
  sprayMix     SprayMix @relation(fields: [sprayMixId], references: [id])
  sprayMixId   Int
  createdBy     String?
  createdAt     DateTime  @default(now())
  company   Company?  @relation(fields: [companyId], references: [id])
  companyId  Int?
  
  
 @@index([companyId])
  @@index([paddockId])
  @@index([cropId])
  @@index([sprayMixId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  companyId     Int?
  accounts      Account[]
  sessions      Session[]
  
}
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  refresh_token_expires_in Int?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Company {
  id           Int     @id @default(autoincrement())
  name         String  @db.VarChar(255)
  employees   Employee[]
  paddocks      Paddock[]
  crops         Crops[]
  sprayMixes    SprayMix[]
  sprayNames    SprayName[]
  SprayEvent    SprayEvent[]
}

 
model Employee {
  id           Int         @id @default(autoincrement())
  name String  @db.VarChar(100)
  email  String   @unique
  is_active Boolean     @default(true)
  is_admin  Boolean     @default(false)
  company   Company  @relation(fields: [companyId], references: [id])
  companyId  Int
  

  @@index([companyId])
}

model authorisedEmail {
  id   Int    @id @default(autoincrement())
  email   String   @unique
}